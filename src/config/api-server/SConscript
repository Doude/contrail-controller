# -*- mode: python; -*-

#
# Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
#

Import('CfgmEnv')
env = CfgmEnv.Clone()

autogen_infra_sources = [
                 '#/tools/generateds/generateDS.py',
                 '#/tools/generateds/TypeGenerator.py',
                 '#/tools/generateds/ccmap.py',
                 '#/tools/generateds/idl_parser.py',
                 '#/tools/generateds/ifmap_global.py',
                 '#/tools/generateds/ifmap_model.py',
                 '#/tools/generateds/ifmap_frontend.py',
                ]

autogen_sources = [
                 '#controller/src/schema/all_cfg.xsd',
                 '#controller/src/schema/vnc_cfg.xsd',
                 '#controller/src/schema/bgp_schema.xsd',
                 '#controller/src/schema/ietf-l3vpn-schema.xsd',
                 '#controller/src/schema/smi-base.xsd',
                ]

autogen_script = File('#tools/generateds/generateDS.py').path
autogen_cmd = '%s -f -o %s -g ifmap-frontend' % (autogen_script, Dir('contrail-config/gen/resource').path)

generated_files = [ 
                  'contrail-config/gen/__init__.py',
                  'contrail-config/gen/resource_xsd.py',
                  'contrail-config/gen/resource_common.py',
                  'contrail-config/gen/resource_server.py',
                  'contrail-config/gen/resource_test.py',
                  'contrail-config/gen/vnc_api_server_gen.py',
                  'contrail-config/gen/vnc_ifmap_client_gen.py',
                  'contrail-config/gen/vnc_cassandra_client_gen.py',
                ]
generated_rule = env.Command(generated_files,
                             '#/controller/src/schema/all_cfg.xsd',
                             autogen_cmd + ' $SOURCE')

setup_sources = [
           'setup.py',
           'MANIFEST.in',
          ]

bottle_sources_rules = []
bottle_sources_rules.append(env.Install("contrail-config", '#/third_party/bottle-0.11.6/bottle.py'))

generateds_rule = env.Install("contrail-config/gen", "../common/generatedssuper.py")
cfixture_rule = env.Install("contrail-config/gen", "../common/cfixture.py")

doc_sources_rules = SConscript(dirs=['doc'], exports = 'CfgmEnv')

sdist_depends = [generated_rule, generateds_rule, cfixture_rule]
sdist_depends.extend(bottle_sources_rules)
sdist_depends.extend(doc_sources_rules)

# TODO: deprecate
sdist_gen = env.Command('dist', 'setup.py', 'python setup.py sdist', chdir=1)

env.Default(sdist_gen)

# generated files depend on autogeneration infra parts

env.Depends(generated_rule, [autogen_infra_sources, autogen_sources])

# install everything before building distribution
env.Depends(sdist_gen, sdist_depends)

if 'install' in BUILD_TARGETS:
    install_cmd = env.Command(None, 'setup.py',
                              'python setup.py install %s' %
                              env['PYTHON_INSTALL_OPT'],
                              chdir = 1)
    env.Depends(install_cmd, sdist_depends)
    env.Alias('install', install_cmd)

